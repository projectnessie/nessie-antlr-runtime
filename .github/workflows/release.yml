# Copyright (C) 2021 The Authors of Nessie
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  # Manually triggered
  workflow_dispatch:
    inputs:
      patchRelease:
        description: 'Patch release version, leave empty for default'
        required: false
        default: ""

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: 'true'

      - name: Check commit status
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          SHA=$(git rev-parse HEAD)
          gh api repos/projectnessie/nessie-antlr-runtime/commits/${SHA}/check-runs --jq 'if ([.check_runs[] | select(.name | endswith("Release") or startswith("Report") | not ) | .conclusion // "pending" ] | unique == ["success"] or unique == []) then "OK" else error("Commit checks are not OK") end'

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: gradle-11-

      - name: Configure release-bot-user in git config
        run: |
          git config --global user.email "nessie-antlr-runtime-release-noreply@projectnessie.org"
          git config --global user.name "nessie-antlr-runtime Release Workflow [bot]"

      - name: Publish to Sonatype
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          PATCH_RELEASE: ${{ github.event.inputs.patchRelease }}
        run: |
          echo "sonatypeUsername=${{ secrets.OSSRH_ACCESS_ID }}" >> ~/.gradle/gradle.properties
          echo "sonatypePassword=${{ secrets.OSSRH_TOKEN }}" >> ~/.gradle/gradle.properties

          ARGS="-Prelease"
          if [[ -n ${PATCH_RELEASE} ]] ; then
            ARGS="${ARGS} -PpatchRelease=${PATCH_RELEASE}"
          fi

          TASKS="writeVersionFile assemble check publishToSonatype closeAndReleaseSonatypeStagingRepository"

          ./gradlew --rerun-tasks --info ${TASKS} ${ARGS}

          git commit --allow-empty --all --message="[release] v$(cat version.txt)"
          git tag -f "antlr-$(cat version.txt)"

      - name: Push tag + branch
        run: |
          # Push directly using the remote repo URL, which includes the secret so this job can push to the repo
          UPSTREAM="https://${{ secrets.NESSIE_BUILDER }}@github.com/${GITHUB_REPOSITORY}.git"

          # Move the default auth settings in ~/.gitconfig out of the way, so the git-push can use the token
          git config --rename-section http.https://github.com/ http.https://save.github.com/

          git push --no-verify "${UPSTREAM}" HEAD:${GITHUB_REF} ${GIT_TAG}

          # Move the default auth settings in ~/.gitconfig back
          git config --rename-section http.https://save.github.com/ http.https://github.com/
